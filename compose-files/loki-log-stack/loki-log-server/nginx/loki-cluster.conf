upstream distributor {
    server 127.0.0.1:32781;
    server 127.0.0.1:32783;
    server 127.0.0.1:32785;
}

upstream querier {
    server 127.0.0.1:32781;
    server 127.0.0.1:32783;
    server 127.0.0.1:32785;
}

upstream query-frontend {
    server 127.0.0.1:32779;
    server 127.0.0.1:32780;
}

server {
    listen 80;
    server_name log-server.qixincha.com;
    proxy_set_header     X-Scope-OrgID docker-ha;

    location = /loki/api/v1/push {
        proxy_pass       http://distributor$request_uri;
    }

    location = /ring {
        proxy_pass       http://distributor$request_uri;
    }

    location = /loki/api/v1/tail {
        proxy_pass       http://querier$request_uri;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
    }

    location ~ /loki/api/.* {
        proxy_pass       http://query-frontend$request_uri;
    }

    access_log /data/log/nginx/loki.access.log;
    error_log /data/log/nginx/loki.error.log;
}

server {
    # for query-frontend.downstream_url
    listen 3100;
    proxy_set_header     X-Scope-OrgID docker-ha;

    location ~ /loki/api/.* {
        proxy_pass       http://querier$request_uri;
    }
}

# 测试用，正式使用在stats-platform的grafana
# server {
#     listen 80;
#     server_name log-grafana.qixincha.com;

#     location /grafana/ {
#         proxy_set_header Host $host;
#         proxy_set_header X-Real-IP $remote_addr;
#         proxy_pass http://localhost:3044/;
#     }

#     access_log /data/log/nginx/grafana.access.log;
#     error_log /data/log/nginx/grafana.error.log;
# }








